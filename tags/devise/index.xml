<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Devise on Mark Richman</title>
    <link>https://markrichman.com/tags/devise/</link>
    <description>Recent content in Devise on Mark Richman</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>mark@markrichman.com (Mark Richman)</managingEditor>
    <webMaster>mark@markrichman.com (Mark Richman)</webMaster>
    <copyright>&amp;copy; 2017. Mark Richman Consulting, Inc. All rights reserved.</copyright>
    <lastBuildDate>Mon, 22 Nov 2010 16:03:24 +0000</lastBuildDate>
    
	<atom:link href="https://markrichman.com/tags/devise/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rails Custom Authentication using Devise, DataMapper, and a Legacy Database</title>
      <link>https://markrichman.com/rails-devise-datamapper-authentication/</link>
      <pubDate>Mon, 22 Nov 2010 16:03:24 +0000</pubDate>
      <author>mark@markrichman.com (Mark Richman)</author>
      <guid>https://markrichman.com/rails-devise-datamapper-authentication/</guid>
      <description>ActiveRecord is great if your database schema evolves along with your web app from birth, but not all of us have this luxury. Many of us live in the world of corporate IT â€“ a world of legacy databases and bureaucracies that make getting a Rails app into production hard enough, let alone getting a new schema into production. DataMapper is a common alternative ORM to use for these scenarios. DataMapper is ideally suited for legacy databases, as Martin Gamsjaeger describes:</description>
    </item>
    
  </channel>
</rss>