<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mark Richman</title>
    <link>https://markrichman.com/index.xml</link>
    <description>Recent content on Mark Richman</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>mark@markrichman.com (Mark Richman)</managingEditor>
    <webMaster>mark@markrichman.com (Mark Richman)</webMaster>
    <copyright>&amp;copy; 2017. Mark Richman Consulting, Inc. All rights reserved.</copyright>
    <lastBuildDate>Tue, 07 Mar 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://markrichman.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Your CFO Hates Me</title>
      <link>https://markrichman.com/2017/03/07/your-cfo-hates-me/</link>
      <pubDate>Tue, 07 Mar 2017 00:00:00 +0000</pubDate>
      <author>mark@markrichman.com (Mark Richman)</author>
      <guid>https://markrichman.com/2017/03/07/your-cfo-hates-me/</guid>
      <description>&lt;p&gt;Your CFO hates my guts.&lt;/p&gt;

&lt;p&gt;Well, not me personally; we’ve probably never met. But if he is anything like the CFOs at many of my client companies, he has reviewed the business case for a cloud migration and shot me a dirty look or two.&lt;/p&gt;

&lt;p&gt;When working with tech execs on their cloud migration strategies, I find their CFOs often get involved early in the decision making process. This is a good thing.&lt;/p&gt;

&lt;p&gt;You see, aside from the myriad technical advantages to cloud computing, there are many financial advantages as well. CFOs love to reduce or eliminate CapEx and depreciation.&lt;/p&gt;

&lt;p&gt;However, cloud computing has another financial aspect: &lt;strong&gt;variable cost&lt;/strong&gt;. With a traditional IT infrastructure, costs are relatively predictable. CFOs will offer guidance on when to make capital purchases. These capital investments also have predictable depreciation.&lt;/p&gt;

&lt;p&gt;Most cloud expenses are variable cost - paying for only what you consume. If you’re an e-commerce retailer, for example, your workload likely varies considerably, and hence, your costs.&lt;/p&gt;

&lt;p&gt;Variable cost can act as a &lt;strong&gt;value lever&lt;/strong&gt;. Here, the increasing costs are offset by increasing revenue. Keep in mind, long delays between spikes in compute demand and their resulting revenue can negatively impact cash flow. This can be disconcerting for a CFO, who might object to a cloud migration based on these possibilities.&lt;/p&gt;

&lt;p&gt;Your CFO is only human, and as such, probably doesn’t like too much change. It’s a lot easier to set up a business based on cloud computing from the outset, as opposed to investing in a transition. Many CFOs I speak with perceive this risk as high. And since this is a CFO, not a CIO or CTO, this fear of risk has nothing to do with cloud computing’s capabilities.&lt;/p&gt;

&lt;p&gt;The cloud has a silver lining for my risk-averse beancounting friends. Among the cloud’s technical advantages, CFOs will enjoy benefits such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Far fewer costly IT infrastructure upgrades&lt;/li&gt;
&lt;li&gt;Better security&lt;/li&gt;
&lt;li&gt;Lower OpEx (more on this in an upcoming article)&lt;/li&gt;
&lt;li&gt;Faster time to market&lt;/li&gt;
&lt;li&gt;Leverage new technologies faster&lt;/li&gt;
&lt;li&gt;Meet demand spikes while preserving SLAs&lt;/li&gt;
&lt;li&gt;Perform research and experiments at low cost&lt;/li&gt;
&lt;li&gt;Keep up with competitors&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The focus of my consulting practice is to minimize the risk (both technical and financial) of these transitions to the cloud.&lt;/p&gt;

&lt;style&gt;
p.callout {
    padding:15px;
    background-color:#ECF8FF;
    margin-bottom: 15px;
}
.callout a {
    font-weight:bold;
    color: #2BA6CB;
}
&lt;/style&gt;

&lt;p class=&#34;callout&#34;&gt;
Considering a move to the cloud? I offer a number of &lt;a href=&#34;https://markrichman.com/services/&#34;&gt;AWS consulting services&lt;/a&gt;, including an &lt;a href=&#34;https://markrichman.com/services/aws-migration/&#34;&gt;AWS migration service&lt;/a&gt; to quickly get you up and running...and have your CFO like you again!&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Tip:&lt;/strong&gt; EC2 inbound data transfer is free, but outbound is not. Find opportunities to limit outbound data to save money.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AWS Elastic Beanstalk &amp; Go</title>
      <link>https://markrichman.com/2017/02/17/aws-elastic-beanstalk-go/</link>
      <pubDate>Fri, 17 Feb 2017 00:00:00 +0000</pubDate>
      <author>mark@markrichman.com (Mark Richman)</author>
      <guid>https://markrichman.com/2017/02/17/aws-elastic-beanstalk-go/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;ll show you how to easily deploy a Go web application using AWS Elastic Beanstalk and Go.&lt;/p&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/_CUIRJYhbXc&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;


&lt;p&gt;If you&amp;rsquo;re not familiar, &lt;a href=&#34;https://aws.amazon.com/elasticbeanstalk/&#34;&gt;AWS Elastic Beanstalk&lt;/a&gt; lets you deploy your app to &lt;a href=&#34;https://aws.amazon.com/&#34;&gt;AWS&lt;/a&gt;, and it takes care of &lt;a href=&#34;https://aws.amazon.com/elasticloadbalancing/&#34;&gt;load balancing&lt;/a&gt; and auto-scaling for you.&lt;/p&gt;

&lt;p&gt;No server configuration required at all.&lt;/p&gt;

&lt;p&gt;It’s cool because it supports lots of platforms - Java, PHP, .NET, Node.js, Python, Ruby, Docker, and Go.&lt;/p&gt;

&lt;p&gt;I like working with &lt;a href=&#34;https://golang.org&#34;&gt;Go&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So let&amp;rsquo;s take a quick look at a code sample I wrote for this demo.&lt;/p&gt;

&lt;p&gt;It’s very simple. Like a Hello World.&lt;/p&gt;

&lt;p&gt;The full project is over at my Github repo: [&lt;a href=&#34;https://github.com/mrichman/elastic-beanstalk-go-demo&#34;&gt;https://github.com/mrichman/elastic-beanstalk-go-demo&lt;/a&gt;]&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/mrichman/aadd564797b363ed72ee732465634797.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;This is a very basic web server that serves up a static HTML page.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m not going to teach you how to program in Go here, but I&amp;rsquo;ll give you a general idea of what’s happening.&lt;/p&gt;

&lt;p&gt;This app runs on port 5000.&lt;/p&gt;

&lt;p&gt;Under the hood, Elastic Beanstalk uses &lt;a href=&#34;https://nginx.org/en&#34;&gt;Nginx&lt;/a&gt; to reverse proxy to your app.&lt;/p&gt;

&lt;p&gt;By default, this is port 5000, but you can override this if you like.&lt;/p&gt;

&lt;p&gt;We set up our default route to return index.html.&lt;/p&gt;

&lt;p&gt;Clone this URL into your Go workspace: [&lt;a href=&#34;https://github.com/mrichman/elastic-beanstalk-go-demo.git&#34;&gt;https://github.com/mrichman/elastic-beanstalk-go-demo.git&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;At the command prompt, run the application:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;go run application.go&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then browse to [&lt;a href=&#34;http://localhost:5000&#34;&gt;http://localhost:5000&lt;/a&gt;]. Simple right?&lt;/p&gt;

&lt;p&gt;So how do we get our app up to Elastic Beanstalk?&lt;/p&gt;

&lt;p&gt;We need to create what’s called a source package.&lt;/p&gt;

&lt;h2 id=&#34;creating-a-source-package&#34;&gt;Creating a source package&lt;/h2&gt;

&lt;p&gt;Create a zip file from the root of this package, for example:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cd $GOPATH/src/github.com/mrichman/elastic-beanstalk-go-demo&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then, either zip it from the command line:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;zip ../eb.zip -r * .[^.]*&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;or use &lt;code&gt;git&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git archive -o ../eb.zip HEAD&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The git command above will zip up the last commit on master.&lt;/p&gt;

&lt;h2 id=&#34;deploying-a-go-application-on-elastic-beanstalk&#34;&gt;Deploying a Go Application on Elastic Beanstalk&lt;/h2&gt;

&lt;p&gt;Browse to the &lt;a href=&#34;https://console.aws.amazon.com/elasticbeanstalk/&#34;&gt;Elastic Beanstalk console&lt;/a&gt;, and click &amp;ldquo;Create New Application&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Give it a name, for example &amp;ldquo;Go Demo&amp;rdquo;. Then create a new web server environment. For &amp;ldquo;Platform&amp;rdquo;, select &amp;ldquo;Go&amp;rdquo;, then select &amp;ldquo;Upload your code&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;For simple Go applications, there are two ways to deploy your application:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Method 1:&lt;/strong&gt; Provide a source bundle with a source file at the root called application.go that contains the main package for your application. Elastic Beanstalk automatically builds the binary using the following command at deployment time:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;go build -o bin/application application.go&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Method 2:&lt;/strong&gt; Provide a source bundle with a binary file called application. The binary file can be located either at the root of the source bundle or in the bin/ directory of the source bundle. If you place the application binary file in both locations, Elastic Beanstalk uses the file in the bin/ directory.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By default, Elastic Beanstalk configures the nginx proxy to forward requests to your application on port 5000. You can override the default port by setting the &lt;code&gt;PORT&lt;/code&gt; system property to the port on which your main application listens.&lt;/p&gt;

&lt;p&gt;For &amp;ldquo;Source code origin&amp;rdquo;, choose &amp;ldquo;Local file&amp;rdquo; and pick the &lt;code&gt;eb.zip&lt;/code&gt; file created above. Enter anything for &amp;ldquo;Version label&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Click &amp;ldquo;Upload&amp;rdquo;, then back at the &amp;ldquo;Create a new environment&amp;rdquo; screen, click &amp;ldquo;Create environment&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Your application will begin to deploy. This process can take several minutes.&lt;/p&gt;

&lt;p&gt;When the deployment is complete, you&amp;rsquo;ll be redirected to your Elastic Beanstalk application&amp;rsquo;s overview page. In the breadcrumb trail at the top, next to your Environment ID, you&amp;rsquo;ll see a URL in the control panel ending in &lt;code&gt;elasticbeanstalk.com&lt;/code&gt; where you can browse your application.&lt;/p&gt;

&lt;p&gt;To clean up after yourself, and terminate your application, click the Actions menu and select &amp;ldquo;Terminate Environment&amp;rdquo;. This will terminate any EC2 instances created during deployment. You can restart your application by selecting Actions -&amp;gt; Create Environment again.&lt;/p&gt;

&lt;style&gt;
p.callout {
    padding:15px;
    background-color:#ECF8FF;
    margin-bottom: 15px;
}
.callout a {
    font-weight:bold;
    color: #2BA6CB;
}
&lt;/style&gt;

&lt;p class=&#34;callout&#34;&gt;
Considering a move to the cloud? I offer a number of &lt;a href=&#34;https://markrichman.com/services/&#34;&gt;AWS consulting services&lt;/a&gt;, including an &lt;a href=&#34;https://markrichman.com/services/aws-migration/&#34;&gt;AWS migration service&lt;/a&gt; to quickly get you up and running...and out of the closet!&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Tip:&lt;/strong&gt; EC2 inbound data transfer is free, but outbound is not. Find opportunities to limit outbound data to save money.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Coming out of the closet with AWS</title>
      <link>https://markrichman.com/2017/01/25/coming-out-of-the-closet-with-aws/</link>
      <pubDate>Wed, 25 Jan 2017 00:00:00 +0000</pubDate>
      <author>mark@markrichman.com (Mark Richman)</author>
      <guid>https://markrichman.com/2017/01/25/coming-out-of-the-closet-with-aws/</guid>
      <description>&lt;p&gt;Most of my clients come to me for help escaping the hell of managing servers in a closet somewhere in their office, or in a colocation facility. They realized their data was far too critical to leave on-premises, risking data loss and security breaches. What’s more, if they needed to rapidly scale their operations to meet demand, it would take weeks to add capacity. In terms of cost, maintaining infrastructure hardware and having to pay network engineers to keep it all going quickly erodes profits. What a nightmare!&lt;/p&gt;

&lt;p&gt;With Amazon Web Services (AWS), you can provision compute power, storage and other resources, gaining access to a suite of elastic IT infrastructure services as your business demands them. With minimal cost and effort, you can move your application to the AWS cloud and reduce capital expenses, minimize support and administrative costs, and retain the performance, security, and reliability requirements your business demands.&lt;/p&gt;

&lt;p&gt;It’s time to come out of the closet with AWS.&lt;/p&gt;

&lt;p&gt;Here are some of my key strategic considerations when planning a migration to AWS:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Identify goals&lt;/strong&gt; - What’s your primary motivator to move to AWS? Is it cost, agility, scalability, performance, or something else?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Survey the landscape&lt;/strong&gt; - Which applications in your portfolio are candidates to migrate to AWS first? What are the current costs involved in continuing to manage these resources yourself?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Determine requirements&lt;/strong&gt; - Which AWS services are required to successfully migrate these application? Consider compute capacity, databases, storage, networking components, monitoring, security, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Define the architecture&lt;/strong&gt; - What will your system architecture look like once running in AWS?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Planning to plan&lt;/strong&gt; - Define a detailed, comprehensive AWS migration plan. This includes all the existing resources, how they map to AWS services, security considerations, networking topology, security and governance, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Execute the migration&lt;/strong&gt; - Once a solid plan is defined, migrate the system to AWS.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monitor and test&lt;/strong&gt; - What’s working well, and what can be improved?&lt;/li&gt;
&lt;/ul&gt;

&lt;style&gt;
p.callout {
    padding:15px;
    background-color:#ECF8FF;
    margin-bottom: 15px;
}
.callout a {
    font-weight:bold;
    color: #2BA6CB;
}
&lt;/style&gt;

&lt;p class=&#34;callout&#34;&gt;
Need help with any or all of these concerns? I offer a number of &lt;a href=&#34;https://markrichman.com/services/&#34;&gt;AWS consulting services&lt;/a&gt;, including an &lt;a href=&#34;https://markrichman.com/services/aws-migration/&#34;&gt;AWS migration service&lt;/a&gt; to quickly get you up and running...and out of the closet!&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Tip:&lt;/strong&gt; EC2 inbound data transfer is free, but outbound is not. Find opportunities to limit outbound data to save money.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hargo: Load Testing using .har files in Go</title>
      <link>https://markrichman.com/2016/10/25/hargo-load-testing-using-har-files-in-go/</link>
      <pubDate>Tue, 25 Oct 2016 00:00:00 +0000</pubDate>
      <author>mark@markrichman.com (Mark Richman)</author>
      <guid>https://markrichman.com/2016/10/25/hargo-load-testing-using-har-files-in-go/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;ve spent quite a bit of time working with Visual Studio&amp;rsquo;s web performance tests. While it&amp;rsquo;s easy to use, it&amp;rsquo;s not as flexible or extensible as Apache JMeter. It&amp;rsquo;s also impossible to capture a browser session without Visual Studio; it&amp;rsquo;s format is proprietary.&lt;/p&gt;

&lt;p&gt;Visual Studio online supports the use of .har files to drive &lt;a href=&#34;https://www.visualstudio.com/en-us/docs/test/performance-testing/getting-started/record-and-replay-cloud-load-tests&#34;&gt;cloud-based load tests&lt;/a&gt;, but again, there are limitations. First, you can only test systems open to the public internet. Also, if you exceed their virtual user quota, you will be billed.&lt;/p&gt;

&lt;p&gt;As I&amp;rsquo;ve spent more time working with the Go (aka Golang) ecosystem, I find myself building out more tools in Go than in C# to improve my own workflow. Jon Oliver offers a &lt;a href=&#34;http://blog.jonathanoliver.com/why-i-love-go/&#34;&gt;similar experience&lt;/a&gt; migrating from .NET to Go on his blog.&lt;/p&gt;

&lt;p&gt;This article explores my rationale for creating this tool, as well as a code walkthrough, demonstrating some of the Go language features that I find most interesting and useful.&lt;/p&gt;

&lt;h2 id=&#34;har-files&#34;&gt;HAR Files&lt;/h2&gt;

&lt;p&gt;If you&amp;rsquo;re not familiar with HAR files, I encourage you to read up on the &lt;a href=&#34;https://w3c.github.io/web-performance/specs/HAR/Overview.html&#34;&gt;spec&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;HAR is the acronym for HTTP ARchive format, which is a JSON-based log of a web browser&amp;rsquo;s interaction with a website.
HAR files can be a requirement for troubleshooting issues specifically for problems related to website performance. For example, slow page load, timeouts when requesting specific URLs, etc.&lt;/p&gt;

&lt;p&gt;Since HAR files capture all this detailed information, why not use it to play back the browsing session as a performance testing tool?&lt;/p&gt;

&lt;p&gt;To that end, I created &lt;a href=&#34;https://github.com/mrichman/hargo&#34;&gt;Hargo&lt;/a&gt;, a &lt;a href=&#34;https://en.wikipedia.org/wiki/.har&#34;&gt;.har&lt;/a&gt; file based performance test tool, written in Go.&lt;/p&gt;

&lt;h2 id=&#34;why-write-hargo-in-go&#34;&gt;Why write Hargo in Go?&lt;/h2&gt;

&lt;p&gt;Hargo takes advantage of Go&amp;rsquo;s built-in concurrency, high performance networking, generous standard library, and cross-platform functionality. I also wanted the non-Microsoft user community to take advantage of a lightweight, useful tool.&lt;/p&gt;

&lt;h2 id=&#34;what-hargo-does&#34;&gt;What Hargo does&lt;/h2&gt;

&lt;p&gt;Hargo is a command-line interface tool, deployed as a single executable with no dependencies. It operates in one of several modes:&lt;/p&gt;

&lt;h3 id=&#34;fetch&#34;&gt;Fetch&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;fetch&lt;/code&gt; command downloads all resources references in .har file:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;hargo fetch foo.har&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will produce a directory named &lt;code&gt;hargo-fetch-yyyymmddhhmmss&lt;/code&gt; containing all assets references by the .har file. This is similar to what you&amp;rsquo;d see when invoking &lt;code&gt;wget&lt;/code&gt; on a particular URL.&lt;/p&gt;

&lt;h3 id=&#34;curl&#34;&gt;Curl&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;curl&lt;/code&gt; command will output a &lt;a href=&#34;https://curl.haxx.se/&#34;&gt;curl&lt;/a&gt; command line for each entry in the .har file.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;hargo curl foo.har&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;run&#34;&gt;Run&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;run&lt;/code&gt; command executes each HTTP request in .har file:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;hargo run foo.har&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This is similar to &lt;code&gt;fetch&lt;/code&gt; but will not save any output.&lt;/p&gt;

&lt;h3 id=&#34;validate&#34;&gt;Validate&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;validate&lt;/code&gt; command will report any errors in the format of a .har file.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;hargo validate foo.har&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;HAR file format is defined here: &lt;a href=&#34;https://w3c.github.io/web-performance/specs/HAR/Overview.html&#34;&gt;https://w3c.github.io/web-performance/specs/HAR/Overview.html&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;dump&#34;&gt;Dump&lt;/h3&gt;

&lt;p&gt;Dump prints information about all HTTP requests in .har file&lt;/p&gt;

&lt;p&gt;&lt;code&gt;hargo dump foo.har&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;load-the-fun-stuff&#34;&gt;Load (the fun stuff)&lt;/h3&gt;

&lt;p&gt;Hargo can act as a load test agent. Given a .har file, hargo can spawn a number of concurrent workers to repeat each HTTP request in order. By default, hargo will spawn 10 workers and run for a duration of 60 seconds.&lt;/p&gt;

&lt;p&gt;Hargo will also save its results to InfluxDB, if available. Each HTTP response is stored as a point of time-series data, which can be graphed by &lt;a href=&#34;https://www.influxdata.com/time-series-platform/chronograf/&#34;&gt;Chronograf&lt;/a&gt;, &lt;a href=&#34;http://grafana.org/&#34;&gt;Grafana&lt;/a&gt;, or similar visualization tool for analysis.&lt;/p&gt;

&lt;h2 id=&#34;code-walkthrough&#34;&gt;Code Walkthrough&lt;/h2&gt;

&lt;p&gt;Hargo can be used as both a library and a cli tool. To use hargo as a library, simply import it:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;import &amp;quot;github.com/mrichman/hargo&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To clone hargo locally, use &lt;code&gt;git clone https://github.com/mrichman/hargo.git&lt;/code&gt;. Then &lt;code&gt;cd hargo&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The main entry point to the cli is &lt;code&gt;cmd/hargo/hargo.go&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Here, you&amp;rsquo;ll see I make use of the amazing &lt;code&gt;github.com/urfave/cli&lt;/code&gt; package (formerly, &lt;code&gt;github.com/codegangsta/cli&lt;/code&gt;). This package enables the construction of powerful cli apps in Go. This isn&amp;rsquo;t meant to be a tutorial on the cli package, but I&amp;rsquo;ll point out a few noteworthy lines of code:&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/mrichman/259692006423a9fe167a69be34c15ed2.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Here, I set up the &lt;code&gt;hargo fetch&lt;/code&gt; command, which takes as an argument the path to a .har file.&lt;/p&gt;

&lt;p&gt;Note the use of &lt;code&gt;newReader()&lt;/code&gt;. While I could have simply created &lt;code&gt;buf := bufio.NewReader(file)&lt;/code&gt; here, there&amp;rsquo;s a peculiarity of some .har files I had to deal with. I noticed that some Windows-based tools like to &lt;a href=&#34;https://tools.ietf.org/html/rfc7159#section-8.1&#34;&gt;completely ignore the spec&lt;/a&gt; and save in UTF-8 with the dreaded BOM (byte-order mark). Telerik &lt;a href=&#34;http://www.telerik.com/fiddler&#34;&gt;Fiddler&lt;/a&gt;, an otherwise great tool, is one such program I&amp;rsquo;ve found to save .har files this way.&lt;/p&gt;

&lt;p&gt;Since Go explicitly fails to decode JSON files with a BOM, I had to work around it. The key is to detect the BOM, and then remove the first 3 characters from the stream:&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/mrichman/5ba86b0053da8d6fb926555127a94aeb.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Now, if you have to work with .har files exported by Fiddler, or another noncompliant Windows-based tool, you&amp;rsquo;re all set.&lt;/p&gt;

&lt;h1 id=&#34;load-testing&#34;&gt;Load Testing&lt;/h1&gt;

&lt;p&gt;Next, let&amp;rsquo;s take a look at Hargo&amp;rsquo;s load testing subcommand, &lt;code&gt;load&lt;/code&gt;. We invoke the load test as follows:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;hargo.LoadTest(r, workers, time.Duration(duration)*time.Second, *u)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The parameters are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;r: the reader used to read the .har file&lt;/li&gt;
&lt;li&gt;workers: the number of concurrent worker routines (default 10)&lt;/li&gt;
&lt;li&gt;duration of the load test in seconds (default 60)&lt;/li&gt;
&lt;li&gt;u: the InfluxDB URL in which to store test result data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, we&amp;rsquo;ll explore the &lt;code&gt;hargo.LoadTest()&lt;/code&gt; function:&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/mrichman/49cdc492036c1ede0578e8535b55550c.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;You will notice I reference &lt;a href=&#34;https://www.influxdata.com/&#34;&gt;InfluxDB&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;c, err := NewInfluxDBClient(u)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;InfluxDB is a time-series database which can be (optionally) used to store the results of tests. In conjunction with InfluxDB, a tool like &lt;a href=&#34;http://grafana.org/&#34;&gt;Grafana&lt;/a&gt; can visualize the test data like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://grafana.org/assets/img/docs/nice_dashboard.png&#34;&gt;&lt;/p&gt;

&lt;p&gt;If you don&amp;rsquo;t have InfluxDB installed, Hargo will simply ignore it when it fails to connect on startup.&lt;/p&gt;

&lt;p&gt;Notice I use a &lt;code&gt;WaitGroup&lt;/code&gt;, which is a synchronization primitive in Go I&amp;rsquo;m using in conjunction with the goroutine &lt;code&gt;processEntries()&lt;/code&gt;. This construct allows me spin up any number of concurrent workers, and wait for them all to terminate before continuing. I also use a timeout to proceed after a specified duration, even if the workers have not yet completed:&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/mrichman/c2d07c413afdf0f67174916699f6d38c.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;The &lt;code&gt;processEntries()&lt;/code&gt; function iterates through each &lt;code&gt;Entry&lt;/code&gt; struct in the decoded .har file, and creates an HTTP request from it. With that request, I add the relevant cookies and HTTP headers.&lt;/p&gt;

&lt;p&gt;Next, I execute the HTTP request using &lt;a href=&#34;https://golang.org/pkg/net/http/#Client.Do`&#34;&gt;Client.Do()&lt;/a&gt;. With the HTTP response in hand, I can compute the latency of the response, and store the result:&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/mrichman/6279440ea90fcdf88a36d40b6594af29.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;I batch up these test results, and store them in InfluxDB for later visualization.&lt;/p&gt;

&lt;h2 id=&#34;watch-it-go-pun-intended&#34;&gt;Watch it Go (pun intended)&lt;/h2&gt;

&lt;p&gt;So, now that you have an idea of how Hargo is constructed, let&amp;rsquo;s give it a whirl. We start by capturing a .har file using any tool that can perform such a feat. The easiest way for me is using Google Chrome. You can record these files by following the steps below:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Right-click anywhere on that page and click on Inspect Element to open Chrome&amp;rsquo;s Developer Tools&lt;/li&gt;
&lt;li&gt;The Developer Tools will open as a panel at the bottom of the page. Click on the Network tab.&lt;/li&gt;
&lt;li&gt;Click the Record button, which is the solid black circle at the bottom of the Network tab, and you&amp;rsquo;ll start recording activity in your browser.&lt;/li&gt;
&lt;li&gt;Refresh the page and start working normally&lt;/li&gt;
&lt;li&gt;Right-click within the Network tab and click Save as HAR with Content to save a copy of the activity that you recorded.&lt;/li&gt;
&lt;li&gt;Within the file window, save the HAR file.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I captured a .har file using the &lt;a href=&#34;https://en.wikipedia.org/wiki/.har&#34;&gt;Wikipedia article for .har files&lt;/a&gt; and saved it as &lt;code&gt;en.wikipedia.org.har&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;With your .har file saved, you can now execute a test:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;hargo load en.wikipedia.org.har&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And you&amp;rsquo;ll see some output&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;INFO[0000] load test .har file: en.wikipedia.org.har 
INFO[0000] Connecting to InfluxDB: http://localhost:8086/hargo 
INFO[0000] DB: hargo                                    
INFO[0000] Recording results to InfluxDB: http://localhost:8086/hargo 
INFO[0000] Starting load test with 10 workers. Duration 1m0s. 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After 60 seconds, the test completes. If you have InfluxDB installed, you can query the raw time-series data using the &lt;code&gt;hargo&lt;/code&gt; database:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;select * from test_result order by time desc limit 1000&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;imgur-embed-pub&#34; lang=&#34;en&#34; data-id=&#34;a/nS6Uv&#34;&gt;&lt;a href=&#34;//imgur.com/nS6Uv&#34;&gt;InfluxDB Hargo Test Results&lt;/a&gt;&lt;/blockquote&gt;&lt;script async src=&#34;//s.imgur.com/min/embed.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Each HTTP response is stored as a point of time-series data, which can be graphed by &lt;a href=&#34;https://www.influxdata.com/time-series-platform/chronograf/&#34;&gt;Chronograf&lt;/a&gt;, &lt;a href=&#34;http://grafana.org/&#34;&gt;Grafana&lt;/a&gt;, or similar visualization tool for analysis.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Hargo is my latest performance testing workflow tool, written in Go. It lacks many features in commercial load testing tools, but I plan to expand on it, with feedback from the community. If you find any bugs, please report them! I am also happy to accept pull requests from anyone.&lt;/p&gt;

&lt;p&gt;You can use the &lt;a href=&#34;https://github.com/mrichman/hargo/issues&#34;&gt;GitHub issue tracker&lt;/a&gt; to report bugs, ask questions, or suggest new features.&lt;/p&gt;

&lt;p&gt;For a more informal setting to discuss this project, you can join the &lt;a href=&#34;https://gitter.im/mrichman/hargo&#34;&gt;Gitter chat&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Web Application Performance and the Support Organization</title>
      <link>https://markrichman.com/web-application-performance-support-organization/</link>
      <pubDate>Tue, 13 Sep 2016 00:00:00 +0000</pubDate>
      <author>mark@markrichman.com (Mark Richman)</author>
      <guid>https://markrichman.com/web-application-performance-support-organization/</guid>
      <description>

&lt;p&gt;When working with clients on web application performance optimization, I often ask for a view of operational costs and overall profitability. Did your eyes just glaze over? Don’t fret. That’s the response I usually get!&lt;/p&gt;

&lt;p&gt;The point of my question isn’t necessarily to see the numbers, but to drive home the point that poor web application performance not only increases the incidence of support requests, it also hits in other areas.&lt;/p&gt;

&lt;p&gt;Very few organizations take the time to calculate their &lt;strong&gt;Cost Per Operational Minute&lt;/strong&gt; (CPOM) of their support center, and have their data blessed by their CFO as accurate. Note that this metric is quite distinct from Cost Per Incident (CPI).&lt;/p&gt;

&lt;p&gt;Here’s a concrete example&amp;hellip;&lt;/p&gt;

&lt;p&gt;One of my clients in the web application hosting (SaaS) space advertises support for several thousand concurrent users. However, one of their customers experienced performance degradation at only 10% of that workload. This resulted in a &lt;strong&gt;Severity 1&lt;/strong&gt; incident being generated.&lt;/p&gt;

&lt;p&gt;Because of its &amp;ldquo;Sev 1&amp;rdquo; status, the CIO was looped into the issue. And then his subordinate VP, Director, Managers&amp;hellip;and ultimately yours truly.&lt;/p&gt;

&lt;p&gt;It took about a week to get to the bottom of the issue, after numerous meetings, email threads, etc. Ultimately, it turned out that the customer’s database was improperly tuned &amp;ndash; a problem I solved in 10 minutes. But the endeavor spun up the organization to the tune of $15,000 of lost productivity, by my estimates.&lt;/p&gt;

&lt;p&gt;Given a 24x7 system has about 10,000 minutes a week of uptime, this incident added about $1.50 to the CPOM. That might not sound like a lot, but consider this was just ONE incident. Also, if there were an SLA for this application, this one issue’s costs would be multiplied by all affected customers.&lt;/p&gt;

&lt;p&gt;With this story in mind, and armed with the data from your case management system on volume, duration and escalations, you can then put a dollar cost tag on the actual cases you have. I also suggest including estimates of &lt;strong&gt;opportunity costs&lt;/strong&gt; &amp;ndash; since your team is actively engaged in dealing with these preventable issues, they had to delay work elsewhere &amp;ndash; such as product development, training, etc.&lt;/p&gt;

&lt;p&gt;I want my clients to have an equally precise view of operational costs and overall profitability. It’s insufficient to simply total up all your FTEs salaries, add X% for overhead, and divide by your incident volume, arriving at a &amp;ldquo;cost per incident&amp;rdquo; estimate. Yes, I know you’ve done it.&lt;/p&gt;

&lt;p&gt;The starting point is a profitability analysis that identifies &lt;strong&gt;all&lt;/strong&gt; of your support organization&amp;rsquo;s operational costs. If your support or service management team doesn&amp;rsquo;t have the bandwidth or the expertise to lead this effort, I can help. Whether you undertake this effort on your own or retain me for the project, it is vital in order to build an effective baseline for decision-making — and to establish the support organization as more than just a necessary evil.&lt;/p&gt;

&lt;h2 id=&#34;life-after-support&#34;&gt;Life After Support&lt;/h2&gt;

&lt;p&gt;Beyond support, there are also implications for Marketing and Customer Success. Poor web application performance will create chatter in the customer community (read: &lt;strong&gt;bad press&lt;/strong&gt;), and may discourage prospects. It also can have an impact on customer retention, lowering both revenues and overall company valuation. The key to getting your voice heard is to have your data at hand and your CFO&amp;rsquo;s backing on the financial implications.&lt;/p&gt;

&lt;h2 id=&#34;retail-isn-t-the-only-vertical-affected-by-poor-web-application-performance&#34;&gt;Retail isn&amp;rsquo;t the Only Vertical Affected by Poor Web Application Performance&lt;/h2&gt;

&lt;p&gt;A great deal of attention is placed on retail performance because retail metrics are easy to capture. Correlating page load times with e-commerce conversion rates is trivial. But performance affects other verticals as well. Media, travel, finance, etc. If there are real people using your service online, then those people&amp;rsquo;s behavior is susceptible to changes wrought by faster or slower web pages. I have yet to encounter a business that, after gathering enough user data and identifying the right metrics, didn&amp;rsquo;t find a correlation between performance and their business.&lt;/p&gt;

&lt;h2 id=&#34;your-challenge&#34;&gt;Your Challenge&lt;/h2&gt;

&lt;p&gt;How are you regularly testing and measuring the impact of poor web application performance on your business? Do you know how to do this?&lt;/p&gt;

&lt;p&gt;I’m &lt;strong&gt;absolutely obsessed&lt;/strong&gt; with making software faster. Just &lt;a href=&#34;https://markrichman.com/contact&#34;&gt;contact me&lt;/a&gt; if you have any questions! I read every message &amp;#x1F604;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Reducing Infrastructure Costs through Application Performance Optimization</title>
      <link>https://markrichman.com/reducing-infrastructure-costs-application-performance-optimization/</link>
      <pubDate>Thu, 01 Sep 2016 00:00:00 +0000</pubDate>
      <author>mark@markrichman.com (Mark Richman)</author>
      <guid>https://markrichman.com/reducing-infrastructure-costs-application-performance-optimization/</guid>
      <description>

&lt;p&gt;I spent about a decade working in the web hosting industry. Optimizing systems to achieve multitenancy, high server density, and minimizing resource utilization was crucial to higher profits. However, many web and systems application developers pay little attention to resource consumption, or how this behavior can eat into a company’s bottom line.&lt;/p&gt;

&lt;h2 id=&#34;consider-this&#34;&gt;Consider This&amp;hellip;&lt;/h2&gt;

&lt;p&gt;The slower your application is, the less revenue you’re likely to derive from it. Pretty simple.&lt;/p&gt;

&lt;p&gt;Think about it&amp;hellip;your customer is based out of a rural area and has a slower internet connection than those in the cities.&lt;/p&gt;

&lt;p&gt;Your customer is using your application for managing their business; they rely on it. It sometimes takes close to a minute or more for some of the more complex pages on your site to load. Your competitor (let’s call them Oogle), offers the same type of software for far less than you charge, they have fewer features, but the interface is quick and snappy and loading pages take under a second.&lt;/p&gt;

&lt;p&gt;Your customer tries a trial of Oogle’s software and finds that it runs a lot faster and the interface is a lot simpler and snappier, and while they don’t have the more complex features yours does, it has all the necessities&amp;hellip;at a lower price.&lt;/p&gt;

&lt;p&gt;Your customer will be a lot more inclined to switch if it means it can get them back to working on the part of their business that actually makes them money faster.&lt;/p&gt;

&lt;p&gt;Remember the days of dial-up? You don’t want to be dial-up.&lt;/p&gt;

&lt;p&gt;If your business is a web application or e-commerce site, you should be devoting time regularly to making sure your site is high performance and can even work great on slow connections. As your business scales, every ounce of performance becomes crucial.&lt;/p&gt;

&lt;h2 id=&#34;performance-affects-operational-costs&#34;&gt;Performance Affects Operational Costs&lt;/h2&gt;

&lt;p&gt;I recently worked with a client to improve their website performance. This effort achieved a 5 second speed improvement (from about 6 seconds down to 1). Over the next few months, this resulted in a 25% increase in page views, a 10% increase in revenue, and a 50% reduction in hardware. This last metric underscores the dramatic value of performance improvements, increasing revenue while driving down operating costs.&lt;/p&gt;

&lt;p&gt;Application performance optimization helps reduce server requirements and supporting infrastructure, lowering the total cost of ownership. Cost factors such as power, networking, and real estate, while maintaining Service Level Agreements, yields strong value to data center operators and IT managers. This also allows organizations to reallocate assets, enabling faster growth and speed to market.&lt;/p&gt;

&lt;h2 id=&#34;the-cloud-doesn-t-always-make-it-cheaper&#34;&gt;The Cloud Doesn’t Always Make It Cheaper&lt;/h2&gt;

&lt;p&gt;The cloud makes it easy to throw more hardware at performance problems. Now certainly you aren&amp;rsquo;t actually throwing more &amp;ldquo;hardware&amp;rdquo; at the problem, but when you consider what &amp;ldquo;more hardware&amp;rdquo; is intended to provide, you&amp;rsquo;ll probably quickly come to the conclusion that whether you&amp;rsquo;e provisioning hardware or virtual images, you&amp;rsquo;re doing the same thing. The way in which we&amp;rsquo;ve traditionally approached scale and performance problems is to throw more hardware at the problem in order to increase the compute resources available. &lt;strong&gt;Performance engineering&lt;/strong&gt; is the way out.&lt;/p&gt;

&lt;p&gt;The more compute resources available, the better the performance, and the higher the capacity of the system. Both vertical and horizontal scalability strategies employ this technique; regardless of the scalability model you&amp;rsquo;re using (up or out), both increase the amount of compute resources available to the application.&lt;/p&gt;

&lt;p&gt;Cloud computing exacerbates this problem by making it even easier to simply increase the amount of compute resources available by provisioning more or larger instances. Essentially the only thing that&amp;rsquo;s changed here is the time it takes to provision more resources: from weeks to minutes. The result is the same: more compute resources. Now you&amp;rsquo;re just &lt;strong&gt;spending more money &amp;ndash; faster&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&#34;your-challenge&#34;&gt;Your Challenge&lt;/h2&gt;

&lt;p&gt;How are you regularly testing and measuring the impact of application performance on your business? Do you know how to do this?&lt;/p&gt;

&lt;p&gt;I’m &lt;strong&gt;absolutely obsessed&lt;/strong&gt; with making software faster. Just &lt;a href=&#34;https://markrichman.com/contact&#34;&gt;contact me&lt;/a&gt; if you have any questions! I read every message &amp;#x1F604;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Team Performance Self-Diagnostic</title>
      <link>https://markrichman.com/team-performance-self-diagnostic/</link>
      <pubDate>Mon, 07 Mar 2016 16:11:29 +0000</pubDate>
      <author>mark@markrichman.com (Mark Richman)</author>
      <guid>https://markrichman.com/team-performance-self-diagnostic/</guid>
      <description>&lt;p&gt;Very often, I&amp;rsquo;m contacted by prospective clients who are seeking &amp;ldquo;help with &amp;lt;&lt;em&gt;insert technology here&lt;/em&gt;&amp;gt;.&amp;rdquo; After some discussion, the truth often surfaces. While clients might &lt;em&gt;want&lt;/em&gt; help with a particular technology, what they usually &lt;em&gt;need&lt;/em&gt; is completely different.&lt;/p&gt;

&lt;p&gt;Many of my best clients believed that implementing a popular technology, product, or process will cure all that ails them. In reality, it&amp;rsquo;s one of many possible team performance issues that require correction, and not a technology problem.&lt;/p&gt;

&lt;p&gt;How many of the following issues resonate with you:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Frequently missed deadlines and commitments, either internally or externally&lt;/li&gt;
&lt;li&gt;Cutting features or adding people to a late project in order to make a date&lt;/li&gt;
&lt;li&gt;Skipping testing steps to save time&lt;/li&gt;
&lt;li&gt;Reopening bugs that were marked as tested, but in reality were not&lt;/li&gt;
&lt;li&gt;Frequent regression testing failures&lt;/li&gt;
&lt;li&gt;Team members working overtime&lt;/li&gt;
&lt;li&gt;Developers and testers don&amp;#8217;t communicate or work as a team&lt;/li&gt;
&lt;li&gt;A &amp;#8220;brilliant jerk&amp;#8221; on the team whose toxicity erodes team morale&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Job security through obscurity&amp;rdquo; where developers write vague, uncomment, or hard-to-understand code in order to maintain their perceived indispensability&lt;/li&gt;
&lt;li&gt;Blame shifting on a team or across teams or departments&lt;/li&gt;
&lt;li&gt;Source code control and configuration management are unused or used minimally&lt;/li&gt;
&lt;li&gt;Frequent rewrites of major pieces of functionality&lt;/li&gt;
&lt;li&gt;Your &lt;a href=&#34;https://en.wikipedia.org/wiki/Bus_factor&#34; target=&#34;_blank&#34;&gt;bus factor&lt;/a&gt; is 0 or 1&lt;/li&gt;
&lt;li&gt;Poor root cause analysis or plus/delta assessments after major outages&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This list is greatly abbreviated, as these issues are seemingly endless. However, they represent some of the most expensive problems that face your organization. What&amp;rsquo;s interesting is that there are few, if any, technologies or products that can solve these problems.&lt;/p&gt;

&lt;p&gt;If you experience &lt;em&gt;any&lt;/em&gt; of the issues on this list, &lt;strong&gt;you need help&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;© 2016 by Mark Richman. All rights reserved.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rapid Innovation Self-Diagnostic</title>
      <link>https://markrichman.com/rapid-innovation-self-diagnostic/</link>
      <pubDate>Mon, 29 Feb 2016 18:13:33 +0000</pubDate>
      <author>mark@markrichman.com (Mark Richman)</author>
      <guid>https://markrichman.com/rapid-innovation-self-diagnostic/</guid>
      <description>&lt;p&gt;&lt;strong&gt;What&amp;#8217;s preventing your ability to rapidly innovate?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Answer the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;How long does it take you to deliver even a single line of code change into production?&lt;/li&gt;
&lt;li&gt;How long does it take you to bring a new product to market?&lt;/li&gt;
&lt;li&gt;How often do you fail to meet commitments to both customers and business partners?&lt;/li&gt;
&lt;li&gt;Do you want to lower the cost of bringing your products to market?&lt;/li&gt;
&lt;li&gt;Do you have a deeper backlog of work than you have resources?&lt;/li&gt;
&lt;li&gt;What level of transparency does your process have?&lt;/li&gt;
&lt;li&gt;How much does support work interrupt your new product development?&lt;/li&gt;
&lt;li&gt;How does the quality of your products suffer because of all of the above?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I&amp;#8217;d love to hear your responses!&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;© 2016 by Mark Richman. All rights reserved.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mr. McFeely’s Speedy Delivery</title>
      <link>https://markrichman.com/mr-mcfeelys-speedy-delivery/</link>
      <pubDate>Mon, 29 Feb 2016 18:08:24 +0000</pubDate>
      <author>mark@markrichman.com (Mark Richman)</author>
      <guid>https://markrichman.com/mr-mcfeelys-speedy-delivery/</guid>
      <description>&lt;p&gt;&lt;img class=&#34;size-medium wp-image-956 alignleft&#34; src=&#34;http://www.markrichman.com/wp-content/uploads/2016/02/mr-mcfeely-website-header-image-300x112.gif&#34; alt=&#34;Mr. McFeely&#34; width=&#34;300&#34; height=&#34;112&#34; /&gt;When I was a kid, I loved &lt;em&gt;Mister Rogers&amp;#8217; Neighborhood&lt;/em&gt;. My favorite character, aside from Mr. Rogers, of course, was Mr. McFeely, the Speedy Delivery man. Mr. McFeely&amp;#8217;s one and only job was to deliver life lessons in the form of parcels to the neighborhood. When working with my clients, I aspire to be like Mr. McFeely, helping to develop the people, processes, tools, and techniques to enable the &lt;strong&gt;speedy delivery&lt;/strong&gt; of ever evolving solutions to their customers.&lt;/p&gt;

&lt;p&gt;I evangelize the principle of delivering working software quickly and frequently. Many organizations struggle or fail to implement this principle because it&amp;#8217;s the one that requires the most organizational change. There are two critical components to the success of Speedy Delivery: Continuous Integration (CI), and Business-Driven Development (BDD). The CI process enables early defect detection, and BDD allows the satisfaction of business-driven requirements, as opposed to technology-driven ones.&lt;/p&gt;

&lt;p&gt;Those who resist this change are often gatekeepers, whose job exists solely to enforce the very processes that hold your progress back. If these draconian processes are really just administrative exercises in filling out forms, checking boxes, and gathering signatures, then it&amp;#8217;s likely unnecessary overhead. For organizations wary of automated processes, I suggest there is a way to retain that human oversight. Empower the former gatekeeper to own the new automated processes.&lt;/p&gt;

&lt;p&gt;I often ask clients this question:&lt;/p&gt;

&lt;p&gt;How long does it take you to deliver even a single line of code change into production?&lt;/p&gt;

&lt;p&gt;If the answer is more than a day or so then there&amp;#8217;s a lot of work to do for continuous integration and delivery.&lt;/p&gt;

&lt;p&gt;© 2016 by Mark Richman. All rights reserved.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>If the Customer Ain’t Happy, Ain’t Nobody Happy</title>
      <link>https://markrichman.com/if-the-customer-aint-happy-aint-nobody-happy/</link>
      <pubDate>Fri, 19 Feb 2016 19:08:54 +0000</pubDate>
      <author>mark@markrichman.com (Mark Richman)</author>
      <guid>https://markrichman.com/if-the-customer-aint-happy-aint-nobody-happy/</guid>
      <description>&lt;p&gt;&lt;img class=&#34;size-medium wp-image-949 alignleft&#34; src=&#34;http://www.markrichman.com/wp-content/uploads/2016/02/Know_customers_1024x544_B-300x159.jpg&#34; alt=&#34;&#34; width=&#34;300&#34; height=&#34;159&#34; srcset=&#34;http://www.markrichman.com/wp-content/uploads/2016/02/Know_customers_1024x544_B-300x159.jpg 300w, http://www.markrichman.com/wp-content/uploads/2016/02/Know_customers_1024x544_B-768x408.jpg 768w, http://www.markrichman.com/wp-content/uploads/2016/02/Know_customers_1024x544_B.jpg 1024w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;This is a short story about two software development companies. Let&amp;#8217;s call them Alpha and Bravo. Both companies received an RFP (Request for Proposal) to develop custom help desk software. After careful review of the respective proposals, the client selects Alpha for the project. Six months to the day after signing the contract, Alpha delivers exactly what was proposed. However, the client is very unhappy.&lt;/p&gt;

&lt;p&gt;During the course of development, the client discovered additional features which Alpha failed to include in the final product. The client renegotiates their contract with Alpha, and four months later, Alpha delivers a product that satisfies all the requirements. But the client is still unhappy. Why? Because during the ten total months of development, a new version of the user interface standards were published. Back to the drawing board. Again. You see where this is going, right?&lt;/p&gt;

&lt;p&gt;Now let&amp;#8217;s suppose Bravo won the contract instead of Alpha. Because Bravo doesn&amp;#8217;t believe in deadlines, they convince the client to accept six incremental deliveries of the product, instead of a single release at the end. One month after commencement, Bravo delivers a minimal but functional, tested, and documented version of the system. The client, after using this early version, notes some usability changes they would like made. They were only able to identify these changes after working with the software. Bravo incorporates the client&amp;#8217;s feedback and a month later delivers another iteration to the client. The client is very happy to see rapid progress, and mentions the upcoming changes to user interface standards. Bravo updates the following iteration to adhere to these standards, and delivers a working system in five months, not six. The customer is delighted.&lt;/p&gt;

&lt;p&gt;Alpha delivered a new product for their client after six months. Bravo delivered the same product incrementally over five months. Did the customer have to work a little harder with Bravo? Sure. Did they get everything they wanted with Alpha? No way.&lt;/p&gt;

&lt;p&gt;All software projects must contribute to the customer&amp;#8217;s business case to the maximum extent possible. Throughout a project, the team must always build the most important features first, as defined by the customer. This approach requires significant customer involvement, continuing for the duration of the project, allowing the early and continuous delivery of value to the customer.&lt;/p&gt;

&lt;p&gt;© 2016 by Mark Richman. All rights reserved.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Scalability: A Million Dollar Question</title>
      <link>https://markrichman.com/scalability-a-million-dollar-question/</link>
      <pubDate>Tue, 26 Jan 2016 14:28:26 +0000</pubDate>
      <author>mark@markrichman.com (Mark Richman)</author>
      <guid>https://markrichman.com/scalability-a-million-dollar-question/</guid>
      <description>&lt;p&gt;&lt;img class=&#34;size-medium wp-image-944 alignright&#34; src=&#34;http://www.markrichman.com/wp-content/uploads/2016/01/Untitled-300x182.png&#34; alt=&#34;Scalability&#34; width=&#34;300&#34; height=&#34;182&#34; srcset=&#34;http://www.markrichman.com/wp-content/uploads/2016/01/Untitled-300x182.png 300w, http://www.markrichman.com/wp-content/uploads/2016/01/Untitled.png 662w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;If you&amp;#8217;re anything like my clients, you spend a lot of time trying to do these two things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Maximize the productivity of your limited staff&lt;/li&gt;
&lt;li&gt;Maximize the performance of your software systems&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As your business grows, both problems become increasingly difficult &amp;#8211; and expensive &amp;#8211; to solve.&lt;/p&gt;

&lt;p&gt;Right now, I want to address the first point &amp;#8211; your team.&lt;/p&gt;

&lt;p&gt;Extensive &lt;a href=&#34;http://www.amazon.com/Assessments-Benchmarks-Addison-Wesley-Information-Technology/dp/0201485427&#34;&gt;research&lt;/a&gt; has shown that productivity drains are a direct result of inefficient processes. Team size does not matter as much as you might think. I&amp;#8217;ve seen small teams perform horribly, and big teams move nimbly, all due to their ability to scale up.&lt;/p&gt;

&lt;p&gt;So, what makes a team (of any size) scale most efficiently?&lt;/p&gt;

&lt;p&gt;The key is to shift focus away from the people and onto the product. I know, this sounds counterintuitive, but stick with me for a minute.&lt;/p&gt;

&lt;p&gt;Your product, or more precisely, the code that makes up your software product, can be managed with precision, unlike your people. Focus on motivating your people, not managing them. Ultimately, they will produce more with higher quality. Then, you ship whatever is ready.&lt;/p&gt;

&lt;p&gt;Do this early and often. Prioritize instead of planning.&lt;/p&gt;

&lt;p&gt;How do I maintain control?&lt;/p&gt;

&lt;p&gt;Glad you asked. Here are the ways you still control the process:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You own the product backlog, and the prioritization of its items&lt;/li&gt;
&lt;li&gt;You allocate tasks&lt;/li&gt;
&lt;li&gt;You set time and budget limits&lt;/li&gt;
&lt;li&gt;You control the code, feature branches, and acceptance testing&lt;/li&gt;
&lt;li&gt;You enforce standards&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;How does this help me scale up?&lt;/p&gt;

&lt;p&gt;This process is fast. You release when you’re ready, as often as you’re ready. It also works well with distributed teams. You can add many more contributors without a planning or testing bottleneck.&lt;/p&gt;

&lt;p&gt;What do I have to change?&lt;/p&gt;

&lt;p&gt;If you&amp;#8217;re already a Scrum or Kanban shop, then very little. If your teams are already productive, then they won’t notice much process change. If they are unproductive, then you should &lt;a href=&#34;http://www.markrichman.com/contact/&#34; target=&#34;_blank&#34;&gt;give me a call&lt;/a&gt;, and we&amp;#8217;ll fix that!&lt;/p&gt;

&lt;p&gt;In my next article, I will discuss the second point &amp;#8211; software performance and scalability.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to Ship Software 7X More Often</title>
      <link>https://markrichman.com/how-to-ship-software-7x-more-often/</link>
      <pubDate>Mon, 11 Jan 2016 23:36:58 +0000</pubDate>
      <author>mark@markrichman.com (Mark Richman)</author>
      <guid>https://markrichman.com/how-to-ship-software-7x-more-often/</guid>
      <description>

&lt;p&gt;My clients, just like you, want to enable faster, better delivery of value. I&amp;#8217;ve helped these organizations scale and improve their operations through agile delivery, achieving continuous innovation of their products. I write and speak a lot about the people, processes, tools, and technologies required for success with agile. While people and processes are critical for success, I want to switch gears a bit talk about tools and technologies.&lt;/p&gt;

&lt;p&gt;The pace of application innovation is faster than ever before, requiring Continuous Integration (CI) and Continuous Deployment (CD). Container technologies, such as &lt;strong&gt;Docker&lt;/strong&gt;, deliver a robust mechanism to develop and deploy applications faster, cheaper, and with higher quality than ever before.&lt;/p&gt;

&lt;h3 id=&#34;what-is-it&#34;&gt;What is it?&lt;/h3&gt;

&lt;p&gt;In contrast to virtual machines, containers offer minimal overhead and resource usage. Developers, testers, and system administrators can quickly run an entire production stack locally, without having to configure and maintain multiple VMs. But that&amp;#8217;s just one use case.&lt;/p&gt;

&lt;p&gt;Here are some benefits my clients enjoy by using Docker:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Simplified configuration&lt;/li&gt;
&lt;li&gt;More efficient management of CI and CD pipelines&lt;/li&gt;
&lt;li&gt;Improved developer and tester productivity&lt;/li&gt;
&lt;li&gt;Application isolation&lt;/li&gt;
&lt;li&gt;Server consolidation&lt;/li&gt;
&lt;li&gt;Faster development and debugging&lt;/li&gt;
&lt;li&gt;Multitenancy without virtual machines&lt;/li&gt;
&lt;li&gt;Rapid deployment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On average, companies that use Docker &lt;strong&gt;ship software 7x more often&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&#34;how-does-it-all-work&#34;&gt;How does it all work?&lt;/h3&gt;

&lt;p&gt;Each container instance includes the application, and a minimum set of OS components needed to run, thereby enabling lightweight, composable, and portable applications. In effect, containers unlock a write-once, run anywhere approach. Developers can target application deployment to any location, without having to rewrite or reconfigure code, thereby maximizing productivity.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;size-medium wp-image-932 align left alignleft&#34; src=&#34;http://www.markrichman.com/wp-content/uploads/2016/01/what-is-docker-diagram-273x300.png&#34; alt=&#34;what-is-docker-diagram&#34; width=&#34;273&#34; height=&#34;300&#34; srcset=&#34;http://www.markrichman.com/wp-content/uploads/2016/01/what-is-docker-diagram-273x300.png 273w, http://www.markrichman.com/wp-content/uploads/2016/01/what-is-docker-diagram.png 638w&#34; sizes=&#34;(max-width: 273px) 100vw, 273px&#34; /&gt;&lt;/p&gt;

&lt;div&gt;
  We achieve this level of performance through a deliberate architecture shift to microservices. These are small, independent application components, built around business capabilities and independently deployable by fully automated deployment machinery.
&lt;/div&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;One efficiency killer I see time and again is an inflexible, monolithic application architecture. These are applications that have grown over time, improperly curated, that are difficult to maintain and keep pace with innovation. Making the shift to microservices makes not only simplifies maintenance, but allows an easy path to containerization.&lt;/p&gt;

&lt;p&gt;Docker helps maximize developer productivity by eliminating dependencies across application services. Applications, once decomposed into microservices, can be deployed to different containers. These containers operate in isolation, so dependencies on conflicting versions are eliminated. The microservices can be independently upgraded, allowing for rapid innovation.&lt;/p&gt;

&lt;h3 id=&#34;how-i-can-help-you&#34;&gt;How I can help you&lt;/h3&gt;

&lt;p&gt;My mission is to help your company achieve maximum performance through agile development and cloud computing. Whether it&amp;#8217;s a culture shift, readying your people and processes for agile, or implementing the tools and technologies to realize DevOps success, we can find opportunities for improvement.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;© 2016 by Mark Richman. All Rights Reserved.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>3 Ways to Build an Agile Organization</title>
      <link>https://markrichman.com/3-ways-to-build-an-agile-organization/</link>
      <pubDate>Tue, 29 Dec 2015 12:55:10 +0000</pubDate>
      <author>mark@markrichman.com (Mark Richman)</author>
      <guid>https://markrichman.com/3-ways-to-build-an-agile-organization/</guid>
      <description>&lt;p&gt;&lt;img class=&#34;size-medium wp-image-919 alignleft&#34; src=&#34;http://www.markrichman.com/wp-content/uploads/2015/12/orgift-featured-300x138.jpg&#34; alt=&#34;&#34; width=&#34;300&#34; height=&#34;138&#34; srcset=&#34;http://www.markrichman.com/wp-content/uploads/2015/12/orgift-featured-300x138.jpg 300w, http://www.markrichman.com/wp-content/uploads/2015/12/orgift-featured.jpg 630w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;For the last few years, especially in the software development space, we&amp;#8217;ve been hearing the word &amp;#8220;agile&amp;#8221; thrown around ad nauseam. Concepts such as iterative design, adaptive planning, collaboration, self-organization, continuous delivery, and so on flood the current literature.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ve spent the last several years working with clients to develop and improve their agile practices, improving quality and time-to-market. The result has been great for software teams and customers alike. But aren&amp;#8217;t we leaving the rest of the organization out in the cold? How can we apply these practices beyond software development, improving the business from the top down?&lt;/p&gt;

&lt;p&gt;This is the &lt;em&gt;Agile Organization&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Small companies, like the startups with whom I&amp;#8217;ve been involved, embrace agility as their default. Larger, more established companies, tend to move less nimbly as they grow, exposing themselves to disruption by more agile players. Let&amp;#8217;s look at a few strategies to help us achieve agility.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Speeding Adoption&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Many of my clients have been struggling to implement agile practices throughout their organization, often taking a couple of years to apply it to every program and project. This kind of _variable adoption_ often indicates a lack of commitment to change. With parts of the organization operating at different cadences, tremendous friction develops, stalling progress. I&amp;#8217;ve worked with diehards, skeptics, and even saboteurs to make agile a reality. Speeding up the agile adoption process in the face of naysayers requires a leap of faith, but one that is supported by years of supporting evidence.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Everyone is a Leader&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One of the secret weapons of Agile&amp;#8217;s success is the role of the individual contributor. Innovators, specialists, and organizers all have equal influence. There is no place for a hands-off manager sitting behind a desk in an agile organization. In some of the best performing organizations with whom I&amp;#8217;ve worked, the teams often assign deliverables to executives, and not the other way around. Steve Jobs once said, &amp;#8220;&lt;span style=&#34;line-height: 1.5;&#34;&gt;it doesn’t make sense to hire smart people and tell them what to do; we hire smart people so they can tell us what to do.&amp;#8221; The agile organization is a collective; trust in each of your people to take a leadership role.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Decide Fast, Fail Faster&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Agile organizations make decisions quickly. This is not to be confused with unmitigated risk-taking. I&amp;#8217;ve seen companies grind to a halt under the strain of &lt;em&gt;analysis paralysis&lt;/em&gt;, forestalling critical decisions due to perceived risk. Longer development cycles increase this risk substantially. I work with my clients to shorten these cycle times. With smaller, more frequent deliveries to market, we can inspect, analyze, and adapt to change. If we fail, by whatever metric we choose, we can take advantage of the learning to improve our decision making and recover quickly. This is the iterative nature of agile, and therein lies its effectiveness.&lt;/p&gt;

&lt;p&gt;Challenge Questions for Business Leaders:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Do you have a stalled agile adoption in your organization, or varying rates of adoption?&lt;/li&gt;
&lt;li&gt;Have you empowered everyone at all levels to be a decision maker?&lt;/li&gt;
&lt;li&gt;Are you missing market opportunities due to stalled decisions or slow production cycles?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;© 2015 by Mark Richman. All rights reserved.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>5 Lessons My Clients Taught Me in 2015</title>
      <link>https://markrichman.com/5-lessons-my-clients-taught-me-in-2015/</link>
      <pubDate>Tue, 22 Dec 2015 14:03:37 +0000</pubDate>
      <author>mark@markrichman.com (Mark Richman)</author>
      <guid>https://markrichman.com/5-lessons-my-clients-taught-me-in-2015/</guid>
      <description>

&lt;p&gt;&lt;img class=&#34;size-medium wp-image-911 alignleft&#34; src=&#34;http://www.markrichman.com/wp-content/uploads/2015/12/project-lessons-learned-300x208.jpg&#34; alt=&#34;project-lessons-learned&#34; width=&#34;300&#34; height=&#34;208&#34; srcset=&#34;http://www.markrichman.com/wp-content/uploads/2015/12/project-lessons-learned-300x208.jpg 300w, http://www.markrichman.com/wp-content/uploads/2015/12/project-lessons-learned.jpg 620w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;Another year in the books. I&amp;#8217;ve had the privilege to help organizations grow, transform, and improve. Along the way, my clients have taught me some valuable lessons that shape how I work. You can&amp;#8217;t stop learning when you view everyone you meet as a teacher.&lt;/p&gt;

&lt;h3 id=&#34;change-is-hard&#34;&gt;Change is Hard&lt;/h3&gt;

&lt;p&gt;I have worked with a wide variety of client personality types over the years; some are excited, motivated and proactive about change. Others can be insecure, anxious, or apprehensive. All have had at least a short period of discomfort as they changed their mindsets and routines to a new way of doing things. Learning new skills, behaviors, tools, and processes can take from a few weeks to a year, depending on the client. Keeping these realities in mind, it is my job to support my clients through change.&lt;/p&gt;

&lt;h3 id=&#34;never-stop-learning&#34;&gt;Never Stop Learning&lt;/h3&gt;

&lt;p&gt;My clients endeavor to understand more about the technology landscape. It always amazes me when a client repeats back something I taught them, even after I&amp;#8217;ve long forgotten what I said. Ultimately, much of my learning is done while I work with my clients and their teams. I learn from every experience and interaction, and apply that knowledge to future projects. I embrace these challenges, focusing on my passions, and I have fun!&lt;/p&gt;

&lt;h3 id=&#34;share-success&#34;&gt;Share Success&lt;/h3&gt;

&lt;p&gt;I genuinely care about my clients, and I&amp;#8217;m excited about my consulting, coaching, training, and speaking opportunities. I&amp;#8217;m just as elated as my clients when we successfully achieve our goals. Even when the going might get tough, clients are motivated by a consistently reliable, knowledgeable consultant who loves what they do and is as committed to success as they are to their long term relationship with the client.&lt;/p&gt;

&lt;h3 id=&#34;be-flexible&#34;&gt;Be Flexible&lt;/h3&gt;

&lt;p&gt;Project focus and direction can change on a dime and so can your clients&amp;#8217; strategy and objectives. You need to be ready to shift gears and adjust quickly to changes within the organizations that you work with.&lt;/p&gt;

&lt;h3 id=&#34;friendships-are-not-bounded-by-age&#34;&gt;Friendships are not Bounded by Age&lt;/h3&gt;

&lt;p&gt;My peer group had always been +/- 3 years. Now I&amp;#8217;ve got friends 40 years older and 15 years younger, directly as a result of those with whom I work.&lt;/p&gt;

&lt;h3 id=&#34;the-brown-hair-isn-8217-t-coming-back&#34;&gt;The Brown hair isn&amp;#8217;t Coming Back&lt;/h3&gt;

&lt;p&gt;The arrow of time only points in one direction. Okay, I guess that&amp;#8217;s six things. Must be the old age.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gunfighting and IT Service Delivery</title>
      <link>https://markrichman.com/gunfighting-and-it-service-delivery/</link>
      <pubDate>Mon, 14 Dec 2015 16:41:48 +0000</pubDate>
      <author>mark@markrichman.com (Mark Richman)</author>
      <guid>https://markrichman.com/gunfighting-and-it-service-delivery/</guid>
      <description>&lt;p&gt;&lt;img class=&#34;size-medium wp-image-893 alignleft&#34; src=&#34;http://www.markrichman.com/wp-content/uploads/2015/12/eastwood-300x165.png&#34; alt=&#34;eastwood&#34; width=&#34;300&#34; height=&#34;165&#34; srcset=&#34;http://www.markrichman.com/wp-content/uploads/2015/12/eastwood-300x165.png 300w, http://www.markrichman.com/wp-content/uploads/2015/12/eastwood-768x421.png 768w, http://www.markrichman.com/wp-content/uploads/2015/12/eastwood-1024x562.png 1024w, http://www.markrichman.com/wp-content/uploads/2015/12/eastwood.png 1485w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;I&amp;#8217;ve been a sport shooting enthusiast for about 15 years. In that time, I&amp;#8217;ve found the most difficult skill to master is &lt;strong&gt;speed vs. accuracy&lt;/strong&gt;. In a fight for one&amp;#8217;s life, this skill becomes vital &amp;#8211; hitting the right target before you exhaust your ammunition. This same balance applies to IT service delivery.&lt;/p&gt;

&lt;p&gt;In my consulting work, I&amp;#8217;ve observed clients who have only one speed. Some clients can only deliver quickly, others slowly. Both extremes are dangerous. Whichever speed it is, it will only be optimal for a narrow range of projects. Learning to adapt and adjust speed is critical for success &amp;#8211; that is, hitting the right target at the right speed.&lt;/p&gt;

&lt;p&gt;How do we know how fast to go?&lt;/p&gt;

&lt;p&gt;Back to my gunfighting analogy &amp;#8211; as the distance to your target increases, so do your chances of missing. Counterintuitively, sometimes you have to speed up to gain accuracy, closing the distance to your target.&lt;/p&gt;

&lt;p&gt;What does this have to do with IT service delivery?&lt;/p&gt;

&lt;p&gt;Glad you asked. I&amp;#8217;ve had clients work at both speed extremes. Too quickly, and requirements are missed, bugs abound, and expensive rework is incurred. As a result, important features get dropped to make a delivery date, or worse, dates are missed. Too slowly, and (obviously) dates are missed, but more importantly, competitors can leapfrog you.&lt;/p&gt;

&lt;p&gt;But you just said to speed up to gain accuracy. Mark, you&amp;#8217;re pulling my leg!&lt;/p&gt;

&lt;p&gt;Nope. I promise. What I mean by &amp;#8220;speed&amp;#8221; here is not necessarily how quickly you can deliver, but how &lt;strong&gt;frequently&lt;/strong&gt; you can deliver.&lt;/p&gt;

&lt;p&gt;Frequency, by way of iteration, allows us to deliver just the right solution at the right time, and no more. Delivering with shorter iterations reduces the distance to our target, and allows us to quickly adapt based on customer demand, market forces, or to take advantage of new technologies. Iterating also allows us to minimize the amount of waste produced by rework.&lt;/p&gt;

&lt;p&gt;Mark, how fast can I go?&lt;/p&gt;

&lt;p&gt;I don&amp;#8217;t know. You don&amp;#8217;t know. But we can find out. After adopting some agile practices, we can measure our velocity &amp;#8211; the amount of value we can deliver per iteration.&lt;/p&gt;

&lt;p&gt;If you&amp;#8217;re anything like my clients, you&amp;#8217;ll be surprised to learn how much faster and straighter you can shoot.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>